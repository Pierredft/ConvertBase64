name: Build Distribution-Ready Packages

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: write
  actions: read
  packages: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install PyInstaller
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
    
    - name: Build Windows executable
      run: |
        pyinstaller --onefile --windowed --name "Base64Converter" textToBase64.py
        
    - name: Prepare Windows distribution
      run: |
        cd dist
        mkdir Base64Converter-Windows
        copy Base64Converter.exe Base64Converter-Windows/
        
        echo "# Base64 Converter pour Windows" > Base64Converter-Windows/README.txt
        echo "" >> Base64Converter-Windows/README.txt
        echo "## Installation:" >> Base64Converter-Windows/README.txt
        echo "1. Double-cliquez sur Base64Converter.exe" >> Base64Converter-Windows/README.txt
        echo "2. Si Windows Defender bloque l'application:" >> Base64Converter-Windows/README.txt
        echo "   - Cliquez sur 'Informations complementaires'" >> Base64Converter-Windows/README.txt
        echo "   - Puis 'Executer quand meme'" >> Base64Converter-Windows/README.txt
        echo "" >> Base64Converter-Windows/README.txt
        echo "## Utilisation:" >> Base64Converter-Windows/README.txt
        echo "- Entrez votre texte dans le champ" >> Base64Converter-Windows/README.txt
        echo "- Cliquez sur 'Convertir'" >> Base64Converter-Windows/README.txt
        echo "- Explorez les 5 onglets pour voir le processus detaille" >> Base64Converter-Windows/README.txt
        echo "" >> Base64Converter-Windows/README.txt
        echo "Cree par Pierre Defauquet - Formation CDA" >> Base64Converter-Windows/README.txt
        
        powershell Compress-Archive -Path Base64Converter-Windows -DestinationPath Base64Converter-Windows-Ready.zip
        
    - name: Upload Windows distribution
      uses: actions/upload-artifact@v4
      with:
        name: Windows-Ready-Package
        path: dist/Base64Converter-Windows-Ready.zip

  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install PyInstaller
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
    
    - name: Build macOS app bundle
      run: |
        pyinstaller --onedir --windowed --name "Base64Converter" textToBase64.py
        
    - name: Prepare macOS distribution
      run: |
        cd dist
        xattr -cr Base64Converter.app
        mkdir Base64Converter-macOS
        cp -R Base64Converter.app Base64Converter-macOS/
        
        cat > Base64Converter-macOS/README.md << 'EOF'
        # Base64 Converter pour macOS

        ## 🚀 Installation rapide:
        1. **Extraire** le fichier ZIP téléchargé
        2. **Glisser** `Base64Converter.app` vers votre dossier **Applications**
        3. **Double-cliquer** sur l'app dans Applications

        ## 🔓 Si macOS bloque l'application:
        ### Méthode 1 (Recommandée):
        1. Aller dans **Préférences Système** → **Sécurité et confidentialité**
        2. Cliquer sur **"Ouvrir quand même"** à côté du message de blocage

        ### Méthode 2 (Terminal):
        ```bash
        xattr -d com.apple.quarantine /Applications/Base64Converter.app
        ```

        ### Méthode 3 (Clic droit):
        1. **Clic droit** sur l'app → **Ouvrir**
        2. Confirmer **"Ouvrir"** dans la popup

        ## 🎯 Utilisation:
        - **Entrez** votre texte dans le champ
        - **Cliquez** sur "🔄 Convertir"  
        - **Explorez** les 5 onglets pour voir le processus détaillé:
          1. 🔤 Texte → ASCII
          2. 🔢 ASCII → Binaire  
          3. ✂️ Découpe en 6-bits
          4. 🎯 6-bits → Base64
          5. ✅ Résultat Final

        ## 💡 Astuce:
        Glissez l'app vers le **Dock** pour un accès rapide !

        ---
        *Créé par Pierre Defauquet - Formation CDA*
        EOF
        
        zip -r Base64Converter-macOS-Ready.zip Base64Converter-macOS
        
    - name: Upload macOS distribution
      uses: actions/upload-artifact@v4
      with:
        name: macOS-Ready-Package  
        path: dist/Base64Converter-macOS-Ready.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk
    
    - name: Install PyInstaller
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
    
    - name: Build Linux executable
      run: |
        pyinstaller --onefile --windowed --name "Base64Converter" textToBase64.py
        
    - name: Prepare Linux distribution
      run: |
        cd dist
        mkdir Base64Converter-Linux
        cp Base64Converter Base64Converter-Linux/
        chmod +x Base64Converter-Linux/Base64Converter
        
        cat > Base64Converter-Linux/launch.sh << 'EOF'
        #!/bin/bash
        echo "🚀 Lancement de Base64 Converter..."
        
        if [ ! -f "./Base64Converter" ]; then
            echo "❌ Erreur: Base64Converter non trouvé"
            echo "💡 Assurez-vous d'être dans le bon dossier"
            exit 1
        fi
        
        chmod +x Base64Converter
        ./Base64Converter
        echo "✅ Base64 Converter fermé"
        EOF
        
        chmod +x Base64Converter-Linux/launch.sh
        
        cat > Base64Converter-Linux/README.md << 'EOF'
        # Base64 Converter pour Linux

        ## 🚀 Installation et lancement:

        ### Méthode 1 (Script automatique - Recommandée):
        ```bash
        unzip Base64Converter-Linux-Ready.zip
        cd Base64Converter-Linux
        ./launch.sh
        ```

        ### Méthode 2 (Manuel):
        ```bash
        unzip Base64Converter-Linux-Ready.zip
        cd Base64Converter-Linux
        chmod +x Base64Converter
        ./Base64Converter
        ```

        ## 🔧 Dépendances requises:
        - **Python 3.x** (généralement pré-installé)
        - **Tkinter** - installer avec:
          ```bash
          # Ubuntu/Debian:
          sudo apt-get install python3-tk
          
          # Fedora/RHEL:
          sudo dnf install tkinter
          
          # Arch Linux:  
          sudo pacman -S tk
          ```

        ## 🎯 Utilisation:
        - **Entrez** votre texte dans le champ
        - **Cliquez** sur "🔄 Convertir"
        - **Explorez** les 5 onglets pour voir le processus détaillé

        ---
        *Créé par Pierre Defauquet - Formation CDA*
        EOF
        
        zip -r Base64Converter-Linux-Ready.zip Base64Converter-Linux
        
    - name: Upload Linux distribution
      uses: actions/upload-artifact@v4
      with:
        name: Linux-Ready-Package
        path: dist/Base64Converter-Linux-Ready.zip

  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Display artifact structure
      run: find artifacts -type f -name "*.zip"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Base64 Converter v${{ github.run_number }}
        body: |
          # 🚀 Base64 Converter - Version ${{ github.run_number }}
          
          ## 📦 Téléchargements (Prêts à utiliser)
          
          ### 🖥️ Windows
          **Fichier**: `Base64Converter-Windows-Ready.zip`
          - ✅ **Installation**: Extraire le ZIP et double-cliquer sur `.exe`
          - ✅ **Aucune installation Python requise**
          - ✅ **Compatible**: Windows 10/11
          
          ### 🍎 macOS  
          **Fichier**: `Base64Converter-macOS-Ready.zip`
          - ✅ **Installation**: Extraire et glisser vers Applications
          - ✅ **Bundle .app natif** macOS
          - ✅ **Compatible**: macOS 10.15+
          
          ### 🐧 Linux
          **Fichier**: `Base64Converter-Linux-Ready.zip`  
          - ✅ **Installation**: Extraire et lancer `./launch.sh`
          - ✅ **Script de lancement** inclus
          - ✅ **Compatible**: Ubuntu, Debian, Fedora, Arch
          
          ## ✨ Fonctionnalités
          - 🔄 **Conversion Texte → Base64** avec processus détaillé
          - 📚 **5 onglets pédagogiques** expliquant chaque étape
          - ✅ **Vérification automatique** avec Python natif
          - 📋 **Copie rapide** des résultats
          - 🎨 **Interface graphique** intuitive
          
          ## 🎓 Utilisation pédagogique
          Parfait pour enseigner :
          - Le codage ASCII
          - La représentation binaire  
          - Le processus Base64
          - Les conversions de bases
          
          ---
          *Développé par Pierre Defauquet dans le cadre de la formation Concepteur Développeur d'Applications*
        draft: false
        prerelease: false

    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/Windows-Ready-Package/Base64Converter-Windows-Ready.zip
        asset_name: Base64Converter-Windows-Ready.zip
        asset_content_type: application/zip

    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/macOS-Ready-Package/Base64Converter-macOS-Ready.zip
        asset_name: Base64Converter-macOS-Ready.zip
        asset_content_type: application/zip

    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/Linux-Ready-Package/Base64Converter-Linux-Ready.zip
        asset_name: Base64Converter-Linux-Ready.zip
        asset_content_type: application/zip